import{d as e}from"./pinia-CTzb92xA.min.js";import{l as n}from"./loadFromCheckout-BMerKOqv.min.js";function t(e){const n=e?.map((e=>({[e.type]:{icon:e.icon,isOpenInvoice:e.isOpenInvoice,configuration:e.configuration}})))||[];return Object.assign({},...n)}var a=()=>{const{adyenEnvironmentMode:e}=s();return"live"===e},s=e("adyenStore",{state:()=>({cache:{},clientToken:null,paymentTypes:[],adyenEnvironmentMode:"live",adyenVaultEnabled:!1,keyLive:"",keyTest:""}),getters:{isAdyenAvailable:async()=>{const[e]=await n(["stores.usePaymentStore"]),{availableMethods:t}=e;return t.some((({code:e})=>e.includes("adyen")))},getAdyenClientKey:async e=>(console.log(await a()),await a()?e.keyLive:e.keyTest)},actions:{setData(e){this.$patch(e)},async getInitialConfigValues(){const[e]=await n(["services.graphQlRequest"]);await this.getCachedResponse((async()=>e("{\n        storeConfig {\n          adyen_environment_mode\n          adyen_vault_enabled\n          adyen_client_key_live\n          adyen_client_key_test\n        }\n      }").then(this.handleInitialConfig)),"getInitialConfig")},handleInitialConfig(e){e?.data?.storeConfig&&this.setData({adyenEnvironmentMode:"0"===e.data.storeConfig.adyen_environment_mode?"live":"test",adyenVaultEnabled:e.data.storeConfig.adyen_vault_enabled,keyLive:e.data.storeConfig.adyen_client_key_live,keyTest:e.data.storeConfig.adyen_client_key_test})},async getPaymentMethodsResponse(){const{paymentMethodsExtraDetails:e,paymentMethodsResponse:a}=await this.getCachedResponse((async()=>(async()=>{const[e,a,s]=await n(["services.graphQlRequest","stores.useCartStore","stores.useConfigStore"]),{maskedId:o,getMaskedId:i}=a,{storeCode:r}=s;let d;return d=o||await i(),e(` {\n    adyenPaymentMethods(cart_id: "${d}", shopper_locale: "${r}") {\n        paymentMethodsExtraDetails {\n            type\n            icon {\n                url\n                width\n                height\n            }\n            isOpenInvoice\n            configuration {\n                amount {\n                    value\n                    currency\n                }\n                currency\n            }\n        }\n        paymentMethodsResponse {\n            paymentMethods {\n                name\n                type\n                brand\n                brands\n                configuration {\n                    merchantId\n                    merchantName\n                    gatewayMerchantId\n                }\n                details {\n                    key\n                    type\n                    items {\n                        id\n                        name\n                    }\n                    optional\n                }\n            }\n            storedPaymentMethods {\n              id\n              brand\n              expiryMonth\n              expiryYear\n              holderName\n              lastFour\n              name\n              ownerName\n              networkTxReference\n              type\n              supportedShopperInteractions\n            }\n        }\n    }\n}`).then((e=>({paymentMethodsExtraDetails:t(e.data.adyenPaymentMethods.paymentMethodsExtraDetails),paymentMethodsResponse:e.data.adyenPaymentMethods.paymentMethodsResponse||{paymentMethods:[]}})))})()),"getAdyenPaymentMethods");if(!this.paymentTypes.length&&a.paymentMethods.forEach((n=>{const{paymentTypes:t}=this;"scheme"===n.type?n.brands.forEach((e=>{t.push({name:n.name,icon:`https://checkoutshopper-live.adyen.com/checkoutshopper/images/logos/${e}.svg`})})):t.push({name:n.name,icon:e[n.type].icon.url}),this.setData({paymentTypes:t})})),a.storedPaymentMethods){const[e]=await n(["stores.usePaymentStore"]);e.setHasVaultedMethods()}return a},async goToAdyenAmazonReviw(){const[e]=await n(["stores.useStepsStore"]);e.setData({yourDetailsActive:!0,shippingActive:!0,paymentActive:!0})},getCachedResponse(e,n,t={}){if(void 0!==this.$state.cache[n])return this.$state.cache[n];const a=e(t);return this.$patch({cache:{[n]:a}}),a},clearPaymentReponseCache(){this.clearCaches(["getAdyenPaymentMethods"])},clearCaches(e){e.length&&e.forEach((e=>{this.setData({cache:{[e]:void 0}})}))}}});export{a as g,s as u};
